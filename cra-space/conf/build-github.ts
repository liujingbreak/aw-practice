/**
 * This file is generated by @wfh/tool-misc
 * Build for hosting in github pages
 */
import {ConfigHandler, DrcpSettings, InjectorConfigHandler} from '@wfh/plink';
import {ReactScriptsHandler} from '@wfh/cra-scripts/dist/types';
// import {config} from '@wfh/plink';

process.env.REACT_APP_deploy = 'github';

const workspaceSetting: ReactScriptsHandler & ConfigHandler & InjectorConfigHandler = {
  changeCraPaths(craPaths, env, cmdOpt) {
    // change CRA paths:

    // output directory will be dist/static/main
    if (cmdOpt.buildType === 'app')
      craPaths.appBuild = craPaths.appBuild + '/aw-practice';
    // Setting "craPaths.publicUrlOrPath" will override environment variable PUBLIC_URL
    craPaths.publicUrlOrPath = '/aw-practice/';
  },

  webpack(cfg, env, cmdOpt) {
    // Change Webpack configure "cfg"
  },
  /** Change settings of Plink and other Plink compliant packages */
  onConfig(setting: DrcpSettings, cliOpt: NonNullable<DrcpSettings['cliOptions']>): void {
    // Run command "plink setting" to see details of setting properties
    // TODO: modify value of "setting"
  },
  /** For Node.js runtime, replace module in "require()" or import syntax */
  setupNodeInjector(factory, setting) {
    // factory.fromPlinkPackage('@wfh/foobar').alias('moduleA', 'moduleB');
  },
  /** For Client framework build tool (React, Angular), replace module in "require()" or import syntax */
  setupWebInjector(factory, setting) {
    // factory.fromPlinkPackage('@wfh/foobar').alias('moduleA', 'moduleB');
  }
};

export default workspaceSetting;
